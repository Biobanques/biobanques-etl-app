#properties de l application
#choix du SGBD : 1= tumorotek, 2 = Stocky ( Genethon), 3 = LilleDatabiotec, 4 = NiceMSACcess 
db.choix = ${db.choix}
#id du site ( fourni par la centrale AppInterrop-Inserm) par defaut 1= site de demo
site.id = ${site.id}
#nom du site/biobanque
#conf nice : site.nom = LPCE BioBank
site.nom = ${site.nom}
#numero finess de la biobank
#nice conf : site.finess = 60785003
site.finess = ${site.finess}
# adresse du proxy. Laisser vide si pas de proxy
site.proxyHost=${site.proxyHost}
# port du proxy. Laisser vide si pas de proxy
site.proxyPort=${site.proxyPort}
# user du proxy. Laisser vide si pas de proxy
site.proxyUserName=${site.proxyUserName}
# password du proxy. Laisser vide si pas de proxy
site.proxyUserPassword=${site.proxyUserPassword}
#repertoire cible apres des exports xml
#folder.export = /data/inserm/export/
folder.export = ${folder.export}
#repertoire cible des exports xml envoyes
folder.export.sent = ${folder.export.sent}
#repertoire cible des rapports d envois
folder.report = ${folder.report}
#numero de version application
application.version= ${version}
#debug mode ( 0 = non, 1 = oui) permet de limiter a 500 le nb d echantillons dans la requete.
application.debug.mode = ${application.debug.mode}
#filtre sql pour suffixer la requete de recuperation des donnees et ainsi restreindre le noyau d informations a exporter
application.sql.filter = ${application.sql.filter}
#export mode JSON ou XML ( par defaut JSON pour economiser de la bande passante) ( values : json, xml)
application.export.mode = ${application.export.mode}
#cron value to apply export file ( cf doc quartz) exemple toutes les minutes a 10 sec  : 10 * * * * ?
# par defaut tout les jours a 22h : 0 0 22 * ?
#pour tester toutes les 5 secondes : 0/5 * * * * ?
application.export.cron = 0/5 * * * * ?
# variable pour indiquer si le fichier de sortie doit etre crypter : 0 = non , 1 = oui
application.export.crypt = ${application.export.crypt}
#phrase de chiffrement limité à 8 caracteres
application.export.cryptphrase = ${application.export.cryptphrase}
# variable pour indiquer si le fichier de sortie doit etre compresser : 0 = non , 1 = oui
application.export.compress = ${application.export.compress}
db.host=${db.host}
db.port=${db.port}
db.name=${db.name}
db.schema=${db.schema}
db.user.login=${db.user.login}
db.user.password=${db.user.password}
inserm.ftp.server = ${inserm.ftp.server}
inserm.ftp.port = ${inserm.ftp.port}
inserm.ftp.path = ${inserm.ftp.path}
inserm.ftp.login = ${inserm.ftp.login}
inserm.ftp.password = ${inserm.ftp.password}
#path du datasource des fichiers excel
folder.datasource.tableurs=${folder.datasource.tableurs}
extractorClass=${extractorClass}